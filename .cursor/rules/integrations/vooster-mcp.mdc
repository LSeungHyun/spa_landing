---
description:
globs:
alwaysApply: false
---
# 🌐 언어 사용 규칙 (Language Usage Rules)

**기본 언어**: 한국어
- 모든 답변과 설명은 한국어로 제공
- 코드 주석과 변수명은 영어 사용 (개발 표준)
- 기술 문서는 한국어 우선, 필요시 영어 병기

---

<!-- ruleType: always -->

# 🎯 SPA 플랫폼 Vooster MCP 활용 가이드라인

이 룰은 SPA(논문 초록/서론 자동 생성기) 플랫폼 프로젝트에서 Vooster MCP를 활용한 프로젝트 관리 및 태스크 추적을 위한 가이드라인입니다.

## 🚀 **기본 원칙**

- **모든 개발 태스크는 Vooster를 통해 관리**
- 기능 개발 전 태스크 생성 및 우선순위 설정
- 진행 상황을 실시간으로 업데이트
- 완료된 태스크는 반드시 DONE 상태로 변경

## 📋 **SPA 프로젝트 태스크 카테고리**

### 🎨 **UI/UX 개발**
```markdown
- 랜딩페이지 디자인 및 구현
- 이메일 수집 폼 UI 개발
- 반응형 디자인 적용
- 사용자 경험 최적화
```

### 🤖 **AI 기능 개발**
```markdown
- 논문 초록 생성 템플릿 개발
- 서론 자동 생성 로직 구현
- Research Question 생성 기능
- AI 프롬프트 최적화
```

### 🔧 **백엔드 개발**
```markdown
- Supabase 스키마 설계
- 이메일 구독 API 개발
- 템플릿 관리 시스템
- 사용자 인증 구현
```

### 📊 **분석 및 최적화**
```markdown
- 랜딩페이지 전환율 분석
- 사용자 행동 추적
- A/B 테스트 구현
- 성능 최적화
```

## 🔄 **Vooster MCP 워크플로우**

### 1️⃣ **프로젝트 연결**
```bash
# MCP 명령어 예시
"SPA 프로젝트에 연결해줘"
"현재 프로젝트의 태스크 목록을 보여줘"
```

### 2️⃣ **태스크 생성**
```bash
# 새로운 기능 개발 시
"랜딩페이지 이메일 수집 폼 개발 태스크를 생성해줘"
"논문 초록 생성 API 구현 태스크를 추가해줘"
```

### 3️⃣ **우선순위 관리**
```bash
# 중요도와 긴급도 설정
"랜딩페이지 개발 태스크의 우선순위를 MUST로 설정해줘"
"다음 우선순위 태스크를 가져와줘"
```

### 4️⃣ **진행 상황 업데이트**
```bash
# 상태 변경
"T-001 태스크를 IN_PROGRESS로 변경해줘"
"이메일 폼 개발 완료, DONE으로 변경해줘"
```

## 📝 **태스크 템플릿**

### 🎯 **기능 개발 태스크**
```markdown
### Task: [기능명] 개발

**Objective:** [구체적인 목표]

**Details:**
- 요구사항 1
- 요구사항 2
- 기술적 고려사항

**Acceptance Criteria:**
- [ ] 기능이 정상적으로 동작함
- [ ] 테스트 케이스 통과
- [ ] 코드 리뷰 완료
- [ ] 문서화 완료

**Priority:** MUST/SHOULD/COULD
**Complexity:** 1-10
**Urgency:** 1-10
```

### 🐛 **버그 수정 태스크**
```markdown
### Task: [버그명] 수정

**Issue:** [버그 설명]

**Steps to Reproduce:**
1. 단계 1
2. 단계 2
3. 결과 확인

**Expected vs Actual:**
- Expected: [예상 결과]
- Actual: [실제 결과]

**Priority:** MUST (버그는 높은 우선순위)
**Complexity:** 1-10
```

## 🎯 **SPA 프로젝트 특화 태스크 예시**

### 📧 **랜딩페이지 개발**
```markdown
T-001: 랜딩페이지 헤더 섹션 구현
- Priority: MUST, Urgency: 10, Complexity: 4
- "논문 초안을 3배 빠르게 만드는 방법" 헤드카피 적용
- 반응형 디자인 구현

T-002: 이메일 수집 폼 개발
- Priority: MUST, Urgency: 9, Complexity: 6
- Formspree 연동
- 유효성 검사 구현
- Thank You 메시지 표시
```

### 🤖 **AI 기능 개발**
```markdown
T-003: 논문 초록 생성 템플릿 개발
- Priority: MUST, Urgency: 8, Complexity: 8
- GPT 프롬프트 최적화
- 학술 논문 구조 반영
- 다양한 연구 분야 지원

T-004: 서론 자동 생성 로직 구현
- Priority: SHOULD, Urgency: 7, Complexity: 9
- 연구 배경 자동 생성
- 문헌 리뷰 구조 제공
- 연구 목적 명확화
```

### 📊 **분석 및 최적화**
```markdown
T-005: 랜딩페이지 전환율 추적
- Priority: SHOULD, Urgency: 6, Complexity: 5
- Google Analytics 연동
- 이메일 수집 전환율 측정
- A/B 테스트 준비

T-006: 사용자 피드백 수집 시스템
- Priority: COULD, Urgency: 4, Complexity: 6
- 피드백 폼 구현
- 데이터베이스 저장
- 관리자 대시보드
```

## 🔍 **태스크 관리 베스트 프랙티스**

### ✅ **DO**
- 태스크는 구체적이고 측정 가능하게 작성
- 완료 조건을 명확히 정의
- 의존성 관계를 명시
- 정기적으로 진행 상황 업데이트

### ❌ **DON'T**
- 너무 큰 태스크를 하나로 묶지 않기
- 우선순위 없이 태스크 생성하지 않기
- 완료된 태스크를 DONE으로 변경하지 않기
- 의존성을 무시하고 개발하지 않기

## 📈 **진행 상황 모니터링**

### 🎯 **일일 체크리스트**
```bash
# 매일 확인할 MCP 명령어
"오늘의 우선순위 태스크를 보여줘"
"진행 중인 태스크 상태를 확인해줘"
"완료된 태스크를 DONE으로 업데이트해줘"
```

### 📊 **주간 리뷰**
```bash
# 주간 진행 상황 확인
"이번 주 완료된 태스크 목록을 보여줘"
"다음 주 우선순위 태스크를 계획해줘"
"프로젝트 전체 진행률을 확인해줘"
```

## 🚀 **릴리즈 관리**

### 🎯 **마일스톤 기반 관리**
```markdown
Milestone 1: MVP 랜딩페이지 (Week 1-2)
- 기본 UI 구현
- 이메일 수집 기능
- 반응형 디자인

Milestone 2: AI 기능 통합 (Week 3-4)
- 템플릿 생성 기능
- 사용자 테스트
- 피드백 반영

Milestone 3: 최적화 및 런칭 (Week 5-6)
- 성능 최적화
- SEO 최적화
- 정식 런칭
```

## 🔧 **개발 환경별 태스크 관리**

### 🧪 **개발 환경**
- 기능 개발 태스크
- 실험적 기능 테스트
- 코드 리팩토링

### 🎭 **스테이징 환경**
- 통합 테스트 태스크
- 사용자 수용 테스트
- 성능 테스트

### 🚀 **프로덕션 환경**
- 배포 관련 태스크
- 모니터링 설정
- 핫픽스 적용

---

**💡 핵심 메시지**: SPA 플랫폼 개발의 모든 작업을 Vooster MCP를 통해 체계적으로 관리하여 프로젝트 성공을 보장하세요!
