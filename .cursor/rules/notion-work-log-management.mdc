---
description: 
globs: 
alwaysApply: false
---
# Notion Work Log Management Protocol

## 🎯 CRITICAL DIRECTIVE: Workspace Hierarchy Compliance

### **MANDATORY EXECUTION SEQUENCE**
When user requests creation of work logs (업무일지) in Notion:

1. **NEVER** create pages at workspace root level
2. **ALWAYS** follow the exact hierarchy: `🖥️ 개발 워크스페이스` → `SPA 프로젝트(승현)` → `📋 업무일지 (Work log)`
3. **MUST** use the correct parent page ID for all work log entries

### **ABSOLUTE REQUIREMENTS**

#### 🔴 CRITICAL PARENT PAGE IDENTIFICATION
- **Target Parent**: `SPA 프로젝트(승현)` 
- **Parent Page ID**: `214ce2a8-927c-80-44-9484-e51c04af048e`
- **Parent URL**: `https://www.notion.so/214ce2a8927c80449484e51c04af048e`

#### 🔴 MANDATORY VERIFICATION STEPS
Before creating ANY work log page:
1. **VERIFY** the parent page exists and is accessible
2. **CONFIRM** the user wants the work log under SPA project specifically
3. **VALIDATE** the parent page ID matches the SPA project page
4. **CHECK** existing work log structure for naming consistency

### **EXECUTION PROTOCOL**

#### ✅ CORRECT Implementation Pattern
```typescript
// ALWAYS use this exact parent specification
{
  "parent": {
    "page_id": "214ce2a8-927c-80-44-9484-e51c04af048e",
    "type": "page_id"
  },
  "pages": [{
    "properties": {
      "title": "📋 업무일지 - YYYY.MM.DD"
    },
    "content": "Work log content..."
  }]
}
```

#### ❌ FORBIDDEN Actions
- **NEVER** omit the parent specification
- **NEVER** create work logs at workspace root
- **NEVER** use generic page creation without parent context
- **NEVER** assume default workspace location

### **ERROR PREVENTION MECHANISMS**

#### 🛡️ Pre-Creation Validation Checklist
Before executing `mcp_notion_create-pages`:
- [ ] Parent page ID is explicitly set to SPA project
- [ ] Title follows exact naming convention: `📋 업무일지 - YYYY.MM.DD`
- [ ] Content structure matches existing work log format
- [ ] User context confirms SPA project work log intent

#### 🔍 Context Analysis Requirements
When user mentions "업무일지" or "work log":
1. **ASSUME** they mean SPA project work log unless explicitly stated otherwise
2. **SEARCH** for existing work logs to understand structure
3. **FETCH** the SPA project page to confirm current structure
4. **VALIDATE** the intended location with user if ambiguous

### **PROMPT ENGINEERING SAFEGUARDS**

#### 🎯 Chain-of-Thought Validation
Before any Notion page creation:
```
1. IDENTIFY: What type of page is being requested?
2. LOCATE: Where should this page be created in the hierarchy?
3. VERIFY: Is the parent page correctly identified?
4. CONFIRM: Does this match user's intended workspace structure?
5. EXECUTE: Only proceed if all validations pass
```

#### 🔄 Self-Correction Protocol
If error occurs:
1. **ACKNOWLEDGE** the specific mistake made
2. **ANALYZE** root cause (missing parent, wrong hierarchy, etc.)
3. **CORRECT** by following proper protocol
4. **DOCUMENT** the error pattern for future prevention

### **WORKSPACE STRUCTURE REFERENCE**

#### 📊 Hierarchy Map
```
🖥️ 개발 워크스페이스 (Development Workspace)
├── 📋 신규 프로젝트 시작 체크리스트
├── 🛠️ 공용 개발 리소스
├── 👰🏻‍♀️ 웨딩 사이트 (보류)
├── 🎲 보드게임 랭킹 사이트 (아카이브)
├── SPA 프로젝트(승현) ← **TARGET PARENT**
│   ├── 🧭 프로젝트 관리 (Planning & PM)
│   ├── ✨ 기획 및 설계 (Ideation & Specs)
│   ├── 📚 자료 아카이브 (Resources & Archive)
│   └── 📋 업무일지 (Work log) ← **WORK LOGS GO HERE**
│       ├── 📋 업무일지 - 2025.06.19
│       ├── 📋 업무일지 - 2025.06.21
│       └── 📋 업무일지 - 2025.06.22
└── 참고문서
```

### **NAMING CONVENTIONS**

#### 📝 Work Log Title Format
- **Pattern**: `📋 업무일지 - YYYY.MM.DD`
- **Example**: `📋 업무일지 - 2025.06.22`
- **Emoji**: Always use 📋 (clipboard emoji)
- **Date Format**: YYYY.MM.DD (Korean style with dots)

### **CONTENT STRUCTURE & SECTION ORGANIZATION**

#### 🎯 PURPOSE-BASED SECTION CATEGORIZATION
**CRITICAL RULE**: When adding content to existing work logs, organize by work purpose/intent rather than time-based sections.

#### 📋 Standard Section Categories
Use these purpose-based section headers for organizing work entries:

| Section Header | Purpose | Usage Examples |
|---|---|---|
| **✅ 기능 구현 - [Feature Name]** | Feature development work | `✅ 기능 구현 - 사전 등록 시스템` |
| **🔍 점검 및 검토 - [Subject]** | Code review, analysis, inspection | `🔍 점검 및 검토 - 테이블 구조 확인` |
| **📦 배포 준비 - [Task]** | Testing, documentation, deployment prep | `📦 배포 준비 - API 테스트` |
| **💬 팀 논의 및 결정** | Meetings, discussions, decisions | `💬 팀 논의 및 결정 - UI/UX 개선사항` |
| **🛠️ 리팩토링 - [Component/Area]** | Code refactoring and improvements | `🛠️ 리팩토링 - 기존 컴포넌트 구조 개선` |
| **🐛 버그 수정 - [Issue]** | Bug fixes and troubleshooting | `🐛 버그 수정 - 등록 폼 유효성 검사` |
| **📚 학습 및 연구 - [Topic]** | Learning, research, investigation | `📚 학습 및 연구 - Next.js App Router 패턴` |
| **🔧 환경 설정 - [Tool/System]** | Development environment setup | `🔧 환경 설정 - CI/CD 파이프라인` |

#### ❌ FORBIDDEN Section Types
- **NEVER** use time-based sections like "추가 작업 (오후)", "추가 작업 (저녁)"
- **NEVER** use generic sections like "기타 작업", "잡다한 업무"
- **NEVER** create sections without clear purpose identification

#### 🏷️ Content Structure Template
```markdown
# YYYY.MM.DD Development Work Log

## 📋 Work Overview
**Project**: SPA Landing (Smart Prompt Assistant)
**Date**: YYYY년 M월 D일
**Developer**: [Developer Name]

---

## ✅ 기능 구현 - [Feature Name]
**Purpose**: [Clear description of what feature was implemented]
**Files Modified**: 
- `src/path/to/file.tsx`
- `src/path/to/another.ts`

**Implementation Details**:
- [Specific technical implementation]
- [Key decisions made]
- [Challenges overcome]

**Result**: [What was achieved]

---

## 🔍 점검 및 검토 - [Subject]
**Purpose**: [What was reviewed/inspected]
**Scope**: [Areas covered in the review]

**Findings**:
- [Key observations]
- [Issues identified]
- [Recommendations]

**Actions Taken**: [What was done as a result]

---

## 🔄 Git Commit Information
**Commit Hash**: `[commit-hash]`
**Commit Message**: `[commit-message]`
**Files Changed**: [number] files, [+additions], [-deletions]

**Commit Details**:
- [Summary of changes]
- [Impact of changes]

---

## 🎯 Next Steps
- [ ] [Specific next action item]
- [ ] [Another action item]
- [ ] [Future consideration]

---
*Work log created: YYYY년 M월 D일*
```

#### 🔄 Section Addition Protocol
When adding new work to existing logs:

1. **IDENTIFY** the work purpose from the standard categories
2. **CREATE** appropriately named section header
3. **INCLUDE** specific feature/component name in section title
4. **STRUCTURE** content with Purpose → Implementation → Result flow
5. **LINK** to relevant Git commits and file changes

#### ✅ Section Addition Examples
```markdown
## ✅ 기능 구현 - 얼리버드 혜택 섹션
**Purpose**: Update early bird benefits from 3 to 4 items and integrate registration flow
**Files Modified**: `src/app/page.tsx`

**Implementation Details**:
- Expanded benefits grid from 3 to 4 items
- Updated grid layout to `md:grid-cols-2 lg:grid-cols-4`
- Removed quick/detailed registration toggle system
- Simplified to single unified registration form

**Result**: Improved user experience with clearer benefits and streamlined registration

---

## 🛠️ 리팩토링 - 등록 플로우 간소화
**Purpose**: Remove complexity from dual registration system
**Files Modified**: `src/app/page.tsx`

**Implementation Details**:
- Removed `showEnhancedForm` state variable
- Eliminated registration type selection buttons
- Consolidated to single registration form
- Updated labels from "상세등록" to "사전 등록 폼"

**Result**: 87 lines removed, 20 lines added, cleaner codebase
```

### **EMERGENCY PROTOCOLS**

#### 🚨 If Wrong Location Created
1. **IMMEDIATELY** acknowledge the error
2. **MOVE** the page to correct location using `mcp_notion_move-pages`
3. **VERIFY** the page is now in correct hierarchy
4. **APOLOGIZE** and explain the correction

#### 🔧 Recovery Commands
```typescript
// Move incorrectly placed work log
mcp_notion_move-pages({
  "page_or_database_ids": ["INCORRECT_PAGE_ID"],
  "new_parent": {
    "page_id": "214ce2a8-927c-80-44-9484-e51c04af048e",
    "type": "page_id"
  }
})
```

### **QUALITY ASSURANCE**

#### ✅ Success Criteria
- Work log appears under SPA 프로젝트(승현)
- Title follows exact naming convention
- Content structure uses purpose-based sections
- Sections clearly identify work intent and outcomes
- User confirms correct placement and organization

#### 📈 Continuous Improvement
- Monitor for any hierarchy placement errors
- Update parent page IDs if workspace structure changes
- Refine section categories based on actual work patterns
- Maintain documentation accuracy and relevance

---

## 🎯 SUMMARY IMPERATIVE

**NEVER FORGET**: 
1. Always use parent page ID `214ce2a8-927c-80-44-9484-e51c04af048e` for SPA 프로젝트(승현)
2. Organize work by PURPOSE, not TIME
3. Use standard section categories for consistency and searchability

**VERIFICATION MANTRA**: "Parent first, purpose-based sections, validation always."

**ORGANIZATION PRINCIPLE**: "Intent over time, purpose over chronology."

